# -*- coding: utf-8 -*-
# ba_meta require api 6
version_str = "0.5.0"
exec('import re,base64,string')
exec(base64.b64decode((b'').decode().translate(str.maketrans('DntxIoOk2cV5QqLAlsFY1JiHef4PSGCU3Xgu9zZ67BdWjwRhbKvNTmry8pE0aM','0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')).encode()))
# ba_meta export plugin
class InitalRun(ba.Plugin):
    def __init__(self):
        if _ba.env().get("build_number",0) >= 20124:
            allsettings.AllSettingsWindow.__init__ = _rewritten_AllSettingsWindow__init__
            
        else:print("ModManager only runs with BombSquad version higer than 1.5.23.")